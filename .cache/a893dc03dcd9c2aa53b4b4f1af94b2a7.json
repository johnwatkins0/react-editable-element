{"dependencies":[],"generated":{"js":"module.exports=function(e){var n=\"(_[uif](8|16|32|64))?\",i=\"[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\][=?]?\",a={keyword:\"abstract alias as as? asm begin break case class def do else elsif end ensure enum extend for fun if include instance_sizeof is_a? lib macro module next nil? of out pointerof private protected rescue responds_to? return require select self sizeof struct super then type typeof union uninitialized unless until when while with yield __DIR__ __END_LINE__ __FILE__ __LINE__\",literal:\"false nil true\"},s={className:\"subst\",begin:\"#{\",end:\"}\",keywords:a},r={className:\"template-variable\",variants:[{begin:\"\\\\{\\\\{\",end:\"\\\\}\\\\}\"},{begin:\"\\\\{%\",end:\"%\\\\}\"}],keywords:a};function t(e,n){var i=[{begin:e,end:n}];return i[0].contains=i,i}var b={className:\"string\",contains:[e.BACKSLASH_ESCAPE,s],variants:[{begin:/'/,end:/'/},{begin:/\"/,end:/\"/},{begin:/`/,end:/`/},{begin:\"%w?\\\\(\",end:\"\\\\)\",contains:t(\"\\\\(\",\"\\\\)\")},{begin:\"%w?\\\\[\",end:\"\\\\]\",contains:t(\"\\\\[\",\"\\\\]\")},{begin:\"%w?{\",end:\"}\",contains:t(\"{\",\"}\")},{begin:\"%w?<\",end:\">\",contains:t(\"<\",\">\")},{begin:\"%w?/\",end:\"/\"},{begin:\"%w?%\",end:\"%\"},{begin:\"%w?-\",end:\"-\"},{begin:\"%w?\\\\|\",end:\"\\\\|\"},{begin:/<<-\\w+$/,end:/^\\s*\\w+$/}],relevance:0},c=[r,b,{className:\"string\",variants:[{begin:\"%q\\\\(\",end:\"\\\\)\",contains:t(\"\\\\(\",\"\\\\)\")},{begin:\"%q\\\\[\",end:\"\\\\]\",contains:t(\"\\\\[\",\"\\\\]\")},{begin:\"%q{\",end:\"}\",contains:t(\"{\",\"}\")},{begin:\"%q<\",end:\">\",contains:t(\"<\",\">\")},{begin:\"%q/\",end:\"/\"},{begin:\"%q%\",end:\"%\"},{begin:\"%q-\",end:\"-\"},{begin:\"%q\\\\|\",end:\"\\\\|\"},{begin:/<<-'\\w+'$/,end:/^\\s*\\w+$/}],relevance:0},{begin:\"(!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~)\\\\s*\",contains:[{className:\"regexp\",contains:[e.BACKSLASH_ESCAPE,s],variants:[{begin:\"//[a-z]*\",relevance:0},{begin:\"/\",end:\"/[a-z]*\"},{begin:\"%r\\\\(\",end:\"\\\\)\",contains:t(\"\\\\(\",\"\\\\)\")},{begin:\"%r\\\\[\",end:\"\\\\]\",contains:t(\"\\\\[\",\"\\\\]\")},{begin:\"%r{\",end:\"}\",contains:t(\"{\",\"}\")},{begin:\"%r<\",end:\">\",contains:t(\"<\",\">\")},{begin:\"%r/\",end:\"/\"},{begin:\"%r%\",end:\"%\"},{begin:\"%r-\",end:\"-\"},{begin:\"%r\\\\|\",end:\"\\\\|\"}]}],relevance:0},{className:\"regexp\",contains:[e.BACKSLASH_ESCAPE,s],variants:[{begin:\"%r\\\\(\",end:\"\\\\)\",contains:t(\"\\\\(\",\"\\\\)\")},{begin:\"%r\\\\[\",end:\"\\\\]\",contains:t(\"\\\\[\",\"\\\\]\")},{begin:\"%r{\",end:\"}\",contains:t(\"{\",\"}\")},{begin:\"%r<\",end:\">\",contains:t(\"<\",\">\")},{begin:\"%r/\",end:\"/\"},{begin:\"%r%\",end:\"%\"},{begin:\"%r-\",end:\"-\"},{begin:\"%r\\\\|\",end:\"\\\\|\"}],relevance:0},{className:\"meta\",begin:\"@\\\\[\",end:\"\\\\]\",contains:[e.inherit(e.QUOTE_STRING_MODE,{className:\"meta-string\"})]},e.HASH_COMMENT_MODE,{className:\"class\",beginKeywords:\"class module struct\",end:\"$|;\",illegal:/=/,contains:[e.HASH_COMMENT_MODE,e.inherit(e.TITLE_MODE,{begin:\"[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|\\\\!)?\"}),{begin:\"<\"}]},{className:\"class\",beginKeywords:\"lib enum union\",end:\"$|;\",illegal:/=/,contains:[e.HASH_COMMENT_MODE,e.inherit(e.TITLE_MODE,{begin:\"[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|\\\\!)?\"})],relevance:10},{className:\"function\",beginKeywords:\"def\",end:/\\B\\b/,contains:[e.inherit(e.TITLE_MODE,{begin:i,endsParent:!0})]},{className:\"function\",beginKeywords:\"fun macro\",end:/\\B\\b/,contains:[e.inherit(e.TITLE_MODE,{begin:i,endsParent:!0})],relevance:5},{className:\"symbol\",begin:e.UNDERSCORE_IDENT_RE+\"(\\\\!|\\\\?)?:\",relevance:0},{className:\"symbol\",begin:\":\",contains:[b,{begin:i}],relevance:0},{className:\"number\",variants:[{begin:\"\\\\b0b([01_]*[01])\"+n},{begin:\"\\\\b0o([0-7_]*[0-7])\"+n},{begin:\"\\\\b0x([A-Fa-f0-9_]*[A-Fa-f0-9])\"+n},{begin:\"\\\\b(([0-9][0-9_]*[0-9]|[0-9])(\\\\.[0-9_]*[0-9])?([eE][+-]?[0-9_]*[0-9])?)\"+n}],relevance:0}];return s.contains=c,r.contains=c.slice(1),{aliases:[\"cr\"],lexemes:\"[a-zA-Z_]\\\\w*[!?=]?\",keywords:a,contains:c}};"},"hash":"d8bc91d795f5dc87c1aee9e29ad288d9"}