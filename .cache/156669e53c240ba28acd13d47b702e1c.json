{"dependencies":[{"name":"prop-types"},{"name":"react"},{"name":"./htmlTags"},{"name":"./validateElementPropType"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _htmlTags = require(\"./htmlTags\");\n\nvar _htmlTags2 = _interopRequireDefault(_htmlTags);\n\nvar _validateElementPropType = require(\"./validateElementPropType\");\n\nvar _validateElementPropType2 = _interopRequireDefault(_validateElementPropType);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EditableElement = function (_React$Component) {\n  _inherits(EditableElement, _React$Component);\n\n  function EditableElement(props) {\n    _classCallCheck(this, EditableElement);\n\n    var _this = _possibleConstructorReturn(this, (EditableElement.__proto__ || Object.getPrototypeOf(EditableElement)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.state = {\n      value: _this.props.value,\n      editable: EditableElement.setEditable(props)\n    };\n\n    _this.onClick = _this.onClick.bind(_this);\n    _this.onChange = _this.onChange.bind(_this);\n    _this.onKeyDown = _this.onKeyDown.bind(_this);\n    _this.maybeFocusInput = _this.maybeFocusInput.bind(_this);\n    return _this;\n  }\n\n  _createClass(EditableElement, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.maybeFocusInput();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.maybeUpdateValue(nextProps);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this.maybeFocusInput(prevProps, prevState);\n    }\n  }, {\n    key: \"maybeFocusInput\",\n    value: function maybeFocusInput() {\n      var prevProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var prevState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!this.input) {\n        return;\n      }\n\n      if (Object.keys(prevProps).length === 0 && this.state.editable) {\n        this.input.focus();\n        return;\n      }\n\n      if (prevProps.editable === false && this.props.editable === true) {\n        this.input.focus();\n        return;\n      }\n\n      if (prevState.editable === false && this.state.editable === true) {\n        this.input.focus();\n      }\n    }\n  }, {\n    key: \"maybeUpdateValue\",\n    value: function maybeUpdateValue(nextProps) {\n      if (nextProps.value !== this.state.value) {\n        this.setState({ value: nextProps.value });\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(value) {\n      this.props.onChange ? this.props.onChange(value) : this.setState({ value: value });\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (this.props.allowEditing === true) {\n        event.preventDefault();\n        this.setState({ editable: true });\n      }\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      if (this.props.onKeyDown) {\n        this.props.onKeyDown(event);\n        return;\n      }\n\n      if ([13, 27].includes(event.keyCode || event.which)) {\n        this.setState({ editable: false });\n      }\n    }\n  }, {\n    key: \"renderStaticElement\",\n    value: function renderStaticElement() {\n      var Element = this.props.element;\n\n      return _react2.default.createElement(Element, {\n        className: this.props.elementClassName,\n        style: this.props.elementStyle,\n        onClick: this.onClick,\n        dangerouslySetInnerHTML: {\n          __html: this.state.value || '(empty element)'\n        }\n      });\n    }\n  }]);\n\n  return EditableElement;\n}(_react2.default.Component);\n\nEditableElement.propTypes = {\n  allowEditing: _propTypes2.default.bool,\n  editable: _propTypes2.default.bool,\n  element: _validateElementPropType2.default,\n  elementClassName: _propTypes2.default.string,\n  elementStyle: _propTypes2.default.objectOf(_propTypes2.default.any),\n  inputClassName: _propTypes2.default.string,\n  inputStyle: _propTypes2.default.objectOf(_propTypes2.default.any),\n  onChange: _propTypes2.default.func,\n  onKeyDown: _propTypes2.default.func,\n  placeholder: _propTypes2.default.string,\n  value: _propTypes2.default.string\n};\nEditableElement.defaultProps = {\n  allowEditing: true,\n  allowedElements: _htmlTags2.default,\n  editable: false,\n  element: 'div',\n  elementClassName: '',\n  elementStyle: {},\n  inputClassName: '',\n  inputStyle: {},\n  onChange: null,\n  onKeyDown: null,\n  placeholder: 'Enter text',\n  value: ''\n};\n\nEditableElement.setEditable = function (props) {\n  return props.allowEditing === true ? props.value === '' || props.editable : false;\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.renderEditableElement = function () {\n    return _react2.default.createElement(\"input\", {\n      ref: function ref(input) {\n        _this2.input = input;\n      },\n      className: _this2.props.inputClassName,\n      style: _this2.props.inputStyle,\n      value: _this2.state.value,\n      placeholder: _this2.props.placeholder,\n      onChange: function onChange(event) {\n        return _this2.onChange(event.target.value);\n      },\n      onKeyDown: _this2.onKeyDown,\n      onBlur: function onBlur() {\n        return _this2.setState({ editable: false });\n      }\n    });\n  };\n\n  this.render = function () {\n    return _this2.state.editable ? _this2.renderEditableElement() : _this2.renderStaticElement();\n  };\n};\n\nexports.default = EditableElement;"},"hash":"0717b41f2b00de2af57ac964fd3e782e"}